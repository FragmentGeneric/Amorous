{"version":3,"sources":["webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.module.ts","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/dashboard/dashboard.module.ts","webpack:///./src/app/user/user.component.ts","webpack:///./src/app/user/user.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["module.exports = \"<p>dashboard works!</p>\\n\"","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { BrowserModule } from '@angular/platform-browser';\nimport {ApplicationRef, DoBootstrap, Injector, NgModule} from '@angular/core';\n\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { createCustomElement } from \"@angular/elements\";\nimport { UserComponent } from \"./user/user.component\";\nimport { UserModule } from \"./user/user.module\";\nimport { DashboardModule } from \"./dashboard/dashboard.module\";\nimport {DashboardComponent} from \"./dashboard/dashboard.component\";\n\n\n/**\n * Bootstraps integration component, acting as browserPolyfill,\n * supporting the use for custom elements via entryComponents\n */\n@NgModule({\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    UserModule,\n    DashboardModule\n  ],\n  entryComponents: [UserComponent, DashboardComponent]\n})\nexport class AppModule implements DoBootstrap {\n\n  constructor(private injector: Injector) {\n    let DashboardElement =  createCustomElement(DashboardComponent, { injector });\n    customElements.define('s-dashboard', DashboardElement);\n\n    let UserElement =  createCustomElement(UserComponent, { injector });\n    customElements.define('app-user', UserElement);\n  }\n\n  ngDoBootstrap(appRef: ApplicationRef): void { }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styles: []\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DashboardComponent } from \"./dashboard.component\";\n\n@NgModule({\n  declarations: [DashboardComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [DashboardComponent]\n})\nexport class DashboardModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Component({\n  selector: 'app-user',\n  template: `\n    <p>user works dude</p>\n  `,\n})\nexport class UserComponent implements OnInit {\n\n  constructor(private http: HttpClient) {}\n\n  ngOnInit() {\n    console.log('[User]');\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {  UserComponent} from \"./user.component\";\nimport {HttpClientModule} from \"@angular/common/http\";\n\n@NgModule({\n  declarations: [UserComponent],\n  imports: [\n    CommonModule,\n    HttpClientModule\n  ],\n  exports: [UserComponent, HttpClientModule]\n})\nexport class UserModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}